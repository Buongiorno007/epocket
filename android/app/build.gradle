apply plugin: "com.android.application"
apply plugin: "com.google.firebase.firebase-perf"
apply plugin: "io.fabric"


import com.android.build.OutputFile

project.ext.react = [
    entryFile: "index.js"
]

apply from: "../../node_modules/react-native/react.gradle"

apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"

def enableSeparateBuildPerCPUArchitecture = false

def enableProguardInReleaseBuilds = false

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "club.dvlp.epocket"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 42
        versionName "3.1.0"
        multiDexEnabled true
        missingDimensionStrategy 'react-native-camera', 'general'
        renderscriptTargetApi 28
        renderscriptSupportModeEnabled true
    }

    signingConfigs {
        release {
            if (project.hasProperty('MYAPP_RELEASE_STORE_FILE')) {
                storeFile file(MYAPP_RELEASE_STORE_FILE)
                storePassword MYAPP_RELEASE_STORE_PASSWORD
                keyAlias MYAPP_RELEASE_KEY_ALIAS
                keyPassword MYAPP_RELEASE_KEY_PASSWORD
            }
        }
    }

    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }

    buildTypes {
        release {
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def versionCodes = ["armeabi-v7a": 1, "x86": 2, "arm64-v8a": 3, "x86_64": 4]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }
    packagingOptions {
        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'
    }
}

dependencies {
    implementation project(':@react-native-community_image-editor')
    implementation project(':react-native-video')
    implementation project(':react-native-share')
    implementation project(':react-native-fast-image')
    implementation project(':react-native-background-timer')
    implementation project(':@react-native-community_async-storage')
    implementation project(':react-native-webview')
    implementation project(':@react-native-community_blur')
    implementation project(':react-native-svg')
    implementation project(':@react-native-community_netinfo')
    implementation project(':react-native-gesture-handler')
    implementation project(':react-native-linear-gradient')
    implementation project(':react-native-i18n')
    implementation project(':react-native-fbsdk')
    implementation project(':react-native-android-open-settings')
    implementation project(':react-native-linear-gradient')
    implementation project(':react-native-sound')
    implementation project(':react-native-fs')
    implementation project(':react-native-fbsdk')
    implementation project(':react-native-cookies')
    implementation project(':rn-fetch-blob')
    implementation project(':react-native-background-fetch')
    implementation project(':react-native-mauron85-background-geolocation')
    implementation project(':react-native-firebase')
    implementation(project(':react-native-android-location-enabler')) {
        exclude group: 'com.android.support', module: 'support-v4'
    }
    implementation(project(':react-native-camera')) {
        implementation 'com.android.support:exifinterface:27.+'
    }
    implementation project(':react-native-image-picker')
    implementation project(':react-native-vector-icons')
    implementation project(':react-native-maps')
    implementation fileTree(dir: "libs", include: ["*.jar"])
    //noinspection GradleCompatible
//    implementation 'androidx.appcompat:npm :1.0.0'
    implementation 'com.facebook.fresco:animated-webp:1.10.0'
    implementation 'com.facebook.fresco:webpsupport:1.10.0'
    implementation 'com.facebook.fresco:fresco:1.12.1'
    implementation 'com.facebook.fresco:animated-gif:1.12.1'
    //noinspection GradleDynamicVersion
    implementation "com.facebook.react:react-native:+"
    implementation "com.google.android.gms:play-services-base:16.1.0"
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation "com.google.firebase:firebase-core:16.0.9"
    implementation 'com.google.firebase:firebase-perf:17.0.0'
    implementation 'com.google.firebase:firebase-messaging:18.0.0'
    implementation 'me.leolin:ShortcutBadger:1.1.21@aar'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true
    }
    implementation 'com.yandex.android:mobmetricalib:3.5.3'
    implementation 'com.android.installreferrer:installreferrer:1.0'


}

task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}

apply plugin: 'com.google.gms.google-services'

